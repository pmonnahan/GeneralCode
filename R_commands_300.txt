R_commands_300:

library(vcfR)

vcfR2genlight.tetra <- function (x) 
{
  bi <- is.biallelic(x)
  if (sum(!bi) > 0) {
    msg <- paste("Found", sum(!bi), "loci with more than two alleles.")
    msg <- c(msg, "\n", paste("Objects of class genlight only support loci with two alleles."))
    msg <- c(msg, "\n", paste(sum(!bi), "loci will be omitted from the genlight object."))
    warning(msg)
    x <- x[bi, ]
  }
  CHROM <- x@fix[, "CHROM"]
  POS <- x@fix[, "POS"]
  ID <- x@fix[, "ID"]
  x <- extract.gt(x)
  x[x == "0|0"] <- 0
  x[x == "0|1"] <- 1
  x[x == "1|0"] <- 1
  x[x == "1|1"] <- 2
  x[x == "0/0"] <- 0
  x[x == "0/1"] <- 1
  x[x == "1/1"] <- 2
  x[x == "1/1/1/1"] <- 4
  x[x == "0/1/1/1"] <- 3
  x[x == "0/0/1/1"] <- 2
  x[x == "0/0/0/1"] <- 1
  x[x == "0/0/0/0"] <- 0
  x <- adegenet::as.genlight(t(x))
  adegenet::chromosome(x) <- CHROM
  adegenet::position(x) <- POS
  adegenet::locNames(x) <- ID
  x
}


Usage example:

vcf_Scaf1<- read.vcfR(file.choose(), nrows=699376)      # read in your vcf using vcfR
Scaf1 <- vcfR2genlight.tetra(vcf_Scaf1) # Will convert your vcf into a genlight correctly for both diploids and polyploids.


##Read depth filtration

#Used vcftools --site-depth to get summed depth across individuals for ALL sites for all scaffolds ('Genotyped' version of vcf's).
scaf6=read.table("~/Google Drive/300/RD.scaf6.ldepth",head=T)

#Used following command to get mode of distributions
Mode <- function(x) {
     ux <- unique(x)
     ux[which.max(tabulate(match(x, ux)))]
 }
 
 #Finds mode of distribution
> Mode(scaf5[scaf5$SUM_DEPTH>1500,]$SUM_DEPTH)
[1] 3960
> Mode(scaf1[scaf1$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3957
> Mode(scaf2[scaf2$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3900
> Mode(scaf3[scaf3$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 4113
> Mode(scaf4[scaf4$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3999
> Mode(scaf5[scaf5$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3960
> Mode(scaf6[scaf6$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3990
> Mode(scaf7[scaf7$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3981
> Mode(scaf8[scaf8$SUM_DEPTH>1000,]$SUM_DEPTH)
[1] 3972


grid.arrange(ggplot(scaf1,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000)),
ggplot(scaf2,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf2")+ylim(c(0,2000000)),
ggplot(scaf3,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf3")+ylim(c(0,2000000)),
ggplot(scaf4,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf4")+ylim(c(0,2000000)),
ggplot(scaf5,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf5")+ylim(c(0,2000000)),
ggplot(scaf6,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf6")+ylim(c(0,2000000)),
ggplot(scaf7,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf7")+ylim(c(0,2000000)),
ggplot(scaf8,aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf8")+ylim(c(0,2000000)),nrow=2)


#This method finds most common bin from histogram.  All point to ~4000 as the mode.
xx=ggplot(scaf1[scaf1$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 3939.394

xx=ggplot(scaf2[scaf2$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 4040.404

xx=ggplot(scaf3[scaf3$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 4040.404

xx=ggplot(scaf4[scaf4$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 3939.394

xx=ggplot(scaf5[scaf5$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 4040.404

xx=ggplot(scaf6[scaf6$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 3939.394

xx=ggplot(scaf7[scaf7$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 4040.404

xx=ggplot(scaf8[scaf8$SUM_DEPTH>1000,],aes(x=SUM_DEPTH))+geom_histogram(bins=100)+xlim(c(0,10000))+ggtitle("Scaf1")+ylim(c(0,2000000))
jj=ggplot_build(xx)$data[[1]]
jj=jj[order(-jj$count),]
mean(c(jj[1,]$xmin,jj[1,]$xmax))
[1] 3939.394

LD CALCULATIONS--PLOTTING HISTOGRAMS using imported histogram file from LD.cpp

ld.dips['tot']=with(ld.dips,ave(V5,V2,FUN=sum)) #finds the total number of observations for all V2 values (upper distance limit)
ld.dips['freq']=ld.dips$V5/ld.dips$tot
ld.dips['mid']=(ld.dips$V3+ld.dips$V4)/2
ld.dips['midXfreq']=ld.dips$mid*ld.dips$freq

ggplot(ld.dips,aes(x=V4,y=freq,fill=V2))+geom_bar(stat="identity",position='dodge') #not a great visualization

xx.dips=tapply(ld.dips$midXfreq,ld.dips$V2,sum)
means.dips=data.frame(key=as.numeric(names(xx.dips)),value=xx.dips)
means.dips['ploidy']='Are.dips'
ggplot(means.dips,aes(x=key,y=value))+geom_point()+scale_x_continuous(trans=log_trans(),breaks=log_breaks(9))+ylab("r_squared")+xlab("Distance")+ggtitle("Diploids")

ld.tets['tot']=with(ld.tets,ave(V5,V2,FUN=sum)) #finds the total number of observations for all V2 values (upper distance limit)
ld.tets['freq']=ld.tets$V5/ld.tets$tot
ld.tets['mid']=(ld.tets$V3+ld.tets$V4)/2
ld.tets['midXfreq']=ld.tets$mid*ld.tets$freq

ggplot(ld.tets,aes(x=V4,y=freq,fill=V2))+geom_bar(stat="identity",position='dodge') #not a great visualization

xx.tets=tapply(ld.tets$midXfreq,ld.tets$V2,sum)
means.tets=data.frame(key=as.numeric(names(xx.tets)),value=xx.tets)
means.tets['ploidy']='Are.tets'
ggplot(means.tets,aes(x=key,y=value))+geom_point()+scale_x_continuous(trans=log_trans(),breaks=log_breaks(9))+ylab("r_squared")+xlab("Distance")+ggtitle("Tetraploids")

ggplot(means.tets,aes(x=key,y=value))+geom_point()

means=rbind(means.dips,means.tets)
ggplot(means,aes(x=key,y=value,colour=ploidy))+geom_point()+scale_x_continuous(trans=log_trans(),breaks=log_breaks(9))+ylab("r_squared")+xlab("Distance")

17-1-17 #Creates graph that plots all population and averages within ploidies
all=rbind(dips,tets)
slim=all[all$Population!="HNE",] # only keep populations with same sample size in slim.
dips=slim[slim$Ploidy==2,]
tets=slim[slim$Ploidy==4,]
xx.dips=tapply(dips$R2,dips$End,mean)
means.tets=data.frame(key=as.numeric(names(xx.tets)),value=xx.tets)
means.dips=data.frame(key=as.numeric(names(xx.dips)),value=xx.dips)
ps=rbind(means.tets,means.dips)
fig=ggplot(slim,aes(y=R2,x=End/1000,color=Population,linetype=Ploidy))+geom_line(alpha=0.4)+geom_line(data=ps,aes(y=value,x=key/1000,linetype=Ploidy),color='black')+scale_x_continuous(trans=log_trans(),breaks=log_breaks(9),labels = comma)+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))


> t.dips=read.table("~/Documents/Research/300/All.DownSample.R2.txt",head=T)
> t.tets=read.table("~/Documents/Research/300/All.Tets.DownSample.R2.txt",head=T)

fig.ds=ggplot(all1,aes(y=R2,x=End/1000,color=Population,linetype=Ploidy))+geom_line(alpha=0.4)+geom_line(data=means,aes(y=value,x=key/1000,linetype=Ploidy),color='black')+scale_x_continuous(trans=log_trans(),breaks=log_breaks(9),labels = comma)+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))

# Values differ between downsample and not downsampled data.  I believe it is because I used different values for minimum fraction of individuals genotyped.

21-2-17
library(stringr)
ld['pop']=str_split_fixed(ld$V1,"/",14)[,11]
ld['scaff']=str_split_fixed(ld$V1,"_",9)[,7]
ld['WS']=str_split_fixed(ld$V1,"_",15)[,9]
means=aggregate(V9 ~ V2 + scaff + WS,data=ld,mean)

scaf2=ggplot(ld[ld$scaff==2 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==2 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 2")
scaf8=ggplot(ld[ld$scaff==8 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==8 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 8")
scaf7=ggplot(ld[ld$scaff==7 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==7 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 7")
scaf6=ggplot(ld[ld$scaff==6 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==6 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 6")
scaf5=ggplot(ld[ld$scaff==5 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==5 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 5")
scaf4=ggplot(ld[ld$scaff==4 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==4 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 4")
scaf1=ggplot(ld[ld$scaff==1 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==1 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 1")
scaf3=ggplot(ld[ld$scaff==3 & ld$WS=='ws1000kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==3 & means$WS=='ws1000kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 3")
scaf2a=ggplot(ld[ld$scaff==2 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==2 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 2")
scaf8a=ggplot(ld[ld$scaff==8 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==8 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 8")
scaf7a=ggplot(ld[ld$scaff==7 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==7 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 7")
scaf6a=ggplot(ld[ld$scaff==6 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==6 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 6")
scaf5a=ggplot(ld[ld$scaff==5 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==5 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 5")
scaf4a=ggplot(ld[ld$scaff==4 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==4 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 4")
scaf1a=ggplot(ld[ld$scaff==1 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==1 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 1")
scaf3a=ggplot(ld[ld$scaff==3 & ld$WS=='ws100kb',],aes(y=V9,x=V5,color=pop,linetype=V2))+geom_line(alpha=0.4)+geom_line(data=means[means$scaff==3 & means$WS=='ws100kb',],aes(y=V9,x=V5,linetype=V2),color='black')+ylab(expression(r^" 2"))+xlab("Distance (kb)")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"),axis.title.y = element_text(size = 18))+ggtitle("Scaf 3")

03-04-17 Regression analysis
gd=read.table("/Users/patrick/Documents/Research/300/GeneDensity_WS50.0k.txt",head=T)
m=read.table("/Users/patrick/Documents/Research/300/Missigness_WS50k_DP8.txt",head=T)
dg=read.table("/Users/patrick/Documents/Research/300/AllPops.4dg.WS50.0k_MS10_5ind_WPM.txt",head=T)
ns=read.table("/Users/patrick/Documents/Research/300/AllPops_WS50k_MS1_NSyn_BPM.txt",head=T) # Had to add extra field to Genome entries because bpm.py did not add Dxy to Genome entry
ns$outname=as.character(ns$outname)
ns['pop1']=substr(ns$outname,1,3)
ns['pop2']=substr(ns$outname,4,6)
pop1=list(unique(ns$pop1))
pop2=list(unique(ns$pop2))
pops=append(unlist(pop1),unlist(pop2))
pops=unique(pops)





Ns=data.frame()
for(i in 1:length(pops)){
     xx=ns[ns$pop1==pops[i]|ns$pop2==pops[i],]
     yy=merge(aggregate(dxy~scaff+end,data=xx,mean),aggregate(Rho~scaff+end,data=xx,mean),by=c("scaff","end"))
     yy=merge(yy,aggregate(Fst~scaff+end,data=xx,mean),by=c("scaff","end"))
     yy['pop']=pops[i]
     Ns=rbind(Ns,yy)
 }


Ns=Ns[Ns$scaff!='Genome',]
dg=dg[dg$scaff!='Genome',]
dg['sqrt_div']=sqrt(dg$Diversity)
dg.avg=aggregate(sqrt_div~scaff+end,data=dg,mean)
Ns=merge(Ns,dg[,c("pop","ploidy","scaff","end")],by=c("pop","scaff","end"))
Ns.avg=aggregate(dxy~scaff+end,data=Ns,mean)
dg.avg.dip=aggregate(sqrt_div~scaff+end,data=dg[dg$ploidy==2,],mean)
Ns.avg.dip=aggregate(dxy~scaff+end,data=Ns[Ns$ploidy==2,],mean)
dg.avg.tet=aggregate(sqrt_div~scaff+end,data=dg[dg$ploidy==4,],mean)
Ns.avg.tet=aggregate(dxy~scaff+end,data=Ns[Ns$ploidy==4,],mean)

data1=merge(Ns,dg,by=c("scaff","end","pop","ploidy"))
data1=merge(data1,gd,by=c("scaff","end"))
data1=merge(data1,m,by=c("scaff","end"))
data1['sqrt_div']=sqrt(data1$Diversity)
data.avg=merge(Ns.avg,dg.avg,by=c("scaff","end"))
data.avg=merge(data.avg,gd,by=c("scaff","end"))
data.avg=merge(data.avg,m,by=c("scaff","end"))
dip.avg=merge(Ns.avg.dip,dg.avg.dip,by=c("scaff","end"))
dip.avg=merge(dip.avg,gd,by=c("scaff","end"))
dip.avg=merge(dip.avg,m,by=c("scaff","end"))
tet.avg=merge(Ns.avg.tet,dg.avg.tet,by=c("scaff","end"))
tet.avg=merge(tet.avg,gd,by=c("scaff","end"))
tet.avg=merge(tet.avg,m,by=c("scaff","end"))

#All together analysis
data1$pop=as.factor(data1$pop)
data1$ploidy=as.factor(data1$ploidy)
contrasts(data1$ploidy)=contr.poly(2)
contrasts(data1$pop)=contr.poly(36) 
reg=lmer(sqrt_div ~ dxy + GD + missing + ploidy + dxy:ploidy + (1 | pop:ploidy),data=data1)
reg2=lmer(sqrt_div ~ dxy + GD + missing + ploidy + (1 | pop:ploidy),data=data1)
reg1=lmer(sqrt_div ~ dxy + GD + missing + (1|pop) + dxy:pop,data=data1)

reg.avg=lm(sqrt_div ~ dxy + GD + missing, data=data.avg)
reg.dip.avg=lm(sqrt_div ~ dxy + GD + missing, data=dip.avg)
reg.tet.avg=lm(sqrt_div ~ dxy + GD + missing, data=tet.avg)

Anova(reg,type="III")
Anova(reg2,type="III")
Anova(reg1,type="III")
Anova(reg.avg,type="III")
Anova(reg.dip.avg,type="III")
Anova(reg.tet.avg,type="III")
Anova(reg.d,type="III")
Anova(reg.d1,type="III")
Anova(reg.t,type="III")




dips=data1[data1$ploidy==2.0,]
tets=data1[data1$ploidy==4.0,]
dips$pop=factor(dips$pop)
tets$pop=factor(tets$pop)
contrasts(dips$pop)=contr.poly(14) 
contrasts(tets$pop)=contr.poly(22)
reg.d=lm(sqrt_div ~ dxy + GD + missing + pop + pop:dxy,data=dips)
reg.d1=lm(sqrt_div ~ dxy + GD + missing + pop,data=dips)
reg.t=lm(sqrt_div ~ dxy + GD + missing + pop + pop:dxy,data=tets)

ggplot(data=tets,aes(x=dxy,y=sqrt_div,color=pop))+geom_smooth(method="lm",fill=NA)+ggtitle("Tetraploids")+ylab("4dg Diversity")+xlab("Avg. Pairwise Nonsyn. Divergence")
ggplot(data=dips,aes(x=dxy,y=sqrt_div,color=pop))+geom_smooth(method="lm",fill=NA)+ggtitle("Diploids")+ylab("4dg Diversity")+xlab("Avg. Pairwise Nonsyn. Divergence")
ggplot(data=tets,aes(x=dxy,y=sqrt_div,color=pop,linetype=ploidy))+geom_smooth(method="lm",fill=NA)+geom_smooth(data=dips,aes(x=dxy,y=sqrt_div,color=pop),fill=NA,method="lm")+ylab("4dg Diversity")+xlab("Avg. Pairwise Nonsyn. Divergence")

#23-04-17

wp4dg.5['Data']="4dg"
wp4dg.7['Data']="4dg"
wl4dg.11['Data']="4dg"
wl4dg.19['Data']="4dg"
wpNSyn.5['Data']="NSyn"
wpNSyn.7['Data']="NSyn"
wlNSyn.11['Data']="NSyn"
wlNSyn.19['Data']="NSyn"
wpAll.5['Data']="All"
wpAll.7['Data']="All"
wlAll.11['Data']="All"
wlAll.19['Data']="All"

wp4dg.5['Data']="4dg"
wp4dg.7['Data']="4dg"
wl4dg.11['Data']="4dg"
wl4dg.19['Data']="4dg"
wpNSyn.5['Data']="NSyn"
wpNSyn.7['Data']="NSyn"
wlNSyn.11['Data']="NSyn"
wlNSyn.19['Data']="NSyn"
wpAll.5['Data']="All"
wpAll.7['Data']="All"
wlAll.11['Data']="All"
wlAll.19['Data']="All"


bpAll$outname=as.character(bpAll$outname)
bpAll['pop1']=substr(bpAll$outname,1,3)
bpAll['pop2']=substr(bpAll$outname,4,6)
blAll$outname=as.character(blAll$outname)
blAll['pop1']=substr(blAll$outname,1,3)
blAll['pop2']=substr(blAll$outname,4,6)
bp4dg$outname=as.character(bp4dg$outname)
bp4dg['pop1']=substr(bp4dg$outname,1,3)
bp4dg['pop2']=substr(bp4dg$outname,4,6)
bl4dg$outname=as.character(bl4dg$outname)
bl4dg['pop1']=substr(bl4dg$outname,1,3)
bl4dg['pop2']=substr(bl4dg$outname,4,6)
bpNSyn$outname=as.character(bpNSyn$outname)
bpNSyn['pop1']=substr(bpNSyn$outname,1,3)
bpNSyn['pop2']=substr(bpNSyn$outname,4,6)
blNSyn$outname=as.character(blNSyn$outname)
blNSyn['pop1']=substr(blNSyn$outname,1,3)
blNSyn['pop2']=substr(blNSyn$outname,4,6)
bpAll['Data']="PASS"
bp4dg['Data']="4dg"
bpNSyn['Data']="NSyn"

blAll['Data']="PASS"
bl4dg['Data']="4dg"
blNSyn['Data']="NSyn"


wp.gen=rbind(wpAll.5[wpAll.5$scaff=="Genome",],wpNSyn.5[wpNSyn.5$scaff=="Genome",])
wp.gen=rbind(wp.gen,wp4dg.5[wp4dg.5$scaff=="Genome",])
wp.gen=rbind(wp.gen,wp4dg.7[wp4dg.7$scaff=="Genome",])
wp.gen=rbind(wp.gen,wpNSyn.7[wpNSyn.7$scaff=="Genome",])
wp.gen=rbind(wp.gen,wpAll.7[wpAll.7$scaff=="Genome",])

wl.gen=rbind(wlAll.11[wlAll.11$scaff=="Genome",],wlNSyn.11[wlNSyn.11$scaff=="Genome",])
wl.gen=rbind(wl.gen,wl4dg.11[wl4dg.11$scaff=="Genome",])
wl.gen=rbind(wl.gen,wl4dg.19[wl4dg.19$scaff=="Genome",])
wl.gen=rbind(wl.gen,wlNSyn.19[wlNSyn.19$scaff=="Genome",])
wl.gen=rbind(wl.gen,wlAll.19[wlAll.19$scaff=="Genome",])

wp.gen$ploidy=as.factor(wp.gen$ploidy)
wp.gen$sampind=as.factor(wp.gen$sampind)

wl.gen$ploidy=as.factor(wl.gen$ploidy)
wl.gen$sampind=as.factor(wl.gen$sampind)


ggplot(wp.gen[wp.gen$sampind=="7",],aes(x=ploidy,y=Diversity))+geom_violin(data=wp.gen[wp.gen$sampind=="7",],aes(fill=Data),trim=F)+geom_boxplot(data=wp.gen[wp.gen$sampind=="7",],aes(x=ploidy,fill=Data),width=0.2,position=position_dodge(0.92))+ylab("Diversity")+theme_bw()+ggtitle("7 individuals -- Populations")
ggplot(wp.gen[wp.gen$sampind=="5",],aes(x=ploidy,y=Diversity))+geom_violin(data=wp.gen[wp.gen$sampind=="5",],aes(fill=Data),trim=F)+geom_boxplot(data=wp.gen[wp.gen$sampind=="5",],aes(x=ploidy,fill=Data),width=0.2,position=position_dodge(0.92))+ylab("Diversity")+theme_bw()+ggtitle("5 individuals -- Populations")


ggplot(wl.gen[wl.gen$sampind=="11",],aes(x=ploidy,y=Diversity))+geom_violin(data=wl.gen[wl.gen$sampind=="11",],aes(fill=Data),trim=F)+geom_boxplot(data=wl.gen[wl.gen$sampind=="11",],aes(x=ploidy,fill=Data),width=0.2,position=position_dodge(0.92))+ylab("Diversity")+theme_bw()+ggtitle("11 individuals -- Lineages")
ggplot(wl.gen[wl.gen$sampind=="19",],aes(x=ploidy,y=Diversity))+geom_violin(data=wl.gen[wl.gen$sampind=="19",],aes(fill=Data),trim=F)+geom_boxplot(data=wl.gen[wl.gen$sampind=="19",],aes(x=ploidy,fill=Data),width=0.2,position=position_dodge(0.92))+ylab("Diversity")+theme_bw()+ggtitle("19 individuals -- Lineages")



bp.gen=rbind(bpAll[bpAll$scaff=="Genome",],bpNSyn[bpNSyn$scaff=="Genome",])
bp.gen=rbind(bp.gen,bp4dg[bp4dg$scaff=="Genome",])
bl.gen=rbind(blAll[blAll$scaff=="Genome",],blNSyn[blNSyn$scaff=="Genome",])
bl.gen=rbind(bl.gen,bl4dg[bl4dg$scaff=="Genome",])

bl.gen1=bl.gen
bl.gen1['pop2.x']=bl.gen1$pop1
bl.gen1['pop1.x']=bl.gen1$pop2
bl.gen1=bl.gen1[,-c(13,14)]
colnames(bl.gen1)[13]="pop2"
colnames(bl.gen1)[14]="pop1"
bl.gen=rbind(bl.gen,bl.gen1)



bp.gen1=bp.gen
bp.gen1['pop2.x']=bp.gen1$pop1
bp.gen1['pop1.x']=bp.gen1$pop2
bp.gen1=bp.gen1[,-c(12,13)]
colnames(bp.gen1)[13]="pop2"
colnames(bp.gen1)[14]="pop1"
bp.gen=rbind(bp.gen,bp.gen1)

bp.gen$pop1=factor(bp.gen$pop1,levels=c("BEL","BIH","CRO","FOJ","GOR","HNE","HNI","KZL","MIE","PRE","RZA","SNO","SZI","TRD","VEL","VID","BGS","BRD","CHO","DRA","GUL","HOC","KAS","KOS","KOW","LAC","RFT","SCH","SPI","STE","SWA","TBG","TKO","TRE","TRT","TZI","WEK","ZAP"))
bp.gen$pop2=factor(bp.gen$pop2,levels=c("BEL","BIH","CRO","FOJ","GOR","HNE","HNI","KZL","MIE","PRE","RZA","SNO","SZI","TRD","VEL","VID","BGS","BRD","CHO","DRA","GUL","HOC","KAS","KOS","KOW","LAC","RFT","SCH","SPI","STE","SWA","TBG","TKO","TRE","TRT","TZI","WEK","ZAP"))
bp.gen=bp.gen[order(bp.gen$pop1,bp.gen$pop2),]

bl.gen$pop1=factor(bl.gen$pop1,levels=c("DSC","DRL","DPA","DDI","DWC","TSC","TAL","TNC","TRL","TSW"))
bl.gen$pop2=factor(bl.gen$pop2,levels=c("DSC","DRL","DPA","DDI","DWC","TSC","TAL","TNC","TRL","TSW"))
bl.gen=bl.gen[order(bl.gen$pop1,bl.gen$pop2),]

#bp.gen3 was bp.gen that was exported and columns reformatted for NSyn data to match up with others:
head(dcast(bp.gen3[bp.gen3$Data=="4dg",c("Rho","pop1","pop2")],pop1~pop2,value.var="Rho"))

bp.gen['combined']=paste(round(bp.gen$Rho,3),"/",round(bp.gen$Fst,3),"/",round(bp.gen$dxy,3))

bl.gen['combined']=paste(round(bl.gen$Rho,3),"/",round(bl.gen$Fst,3),"/",round(bl.gen$dxy,3))

write.table(dcast(bl.gen[bl.gen$Data=="4dg",c("combined","pop1","pop2")],pop1~pop2,value.var="combined"),'/Users/patrick/Documents/Research/300/Pairwise_Lineages_4dg_bpm.txt',row.names = F,quote=F,sep='\t')

write.table(dcast(bl.gen[bl.gen$Data=="PASS",c("combined","pop1","pop2")],pop1~pop2,value.var="combined"),'/Users/patrick/Documents/Research/300/Pairwise_Lineages_PASS_bpm.txt',row.names = F,quote=F,sep='\t')

write.table(dcast(bp.gen[bp.gen$Data=="4dg",c("combined","pop1","pop2")],pop1~pop2,value.var="combined"),'/Users/patrick/Documents/Research/300/Pairwise_Pops_4dg_bpm.txt',row.names = F,quote=F,sep='\t')

write.table(dcast(bp.gen[bp.gen$Data=="PASS",c("combined","pop1","pop2")],pop1~pop2,value.var="combined"),'/Users/patrick/Documents/Research/300/Pairwise_Pops_PASS_bpm.txt',row.names = F,quote=F,sep='\t')

write.table(dcast(bp.gen[bp.gen$Data=="NSyn",c("combined","pop1","pop2")],pop1~pop2,value.var="combined"),'/Users/patrick/Documents/Research/300/Pairwise_Pops_NSyn_bpm.txt',row.names = F,quote=F,sep='\t')

ggplot(bp.gen3,aes(x=ploidy_diff,y=Rho))+geom_violin(data=bp.gen3,aes(fill=Data))+geom_boxplot(data=bp.gen3,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.93))+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Rho")+theme_bw()+theme(axis.title.x=element_blank())


ggplot(bl.gen1,aes(x=ploidy_diff,y=Rho))+geom_violin(data=bl.gen1,aes(fill=Data),trim=F)+geom_boxplot(data=bl.gen1,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Lineages")+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Rho")+theme_bw()+theme(axis.title.x=element_blank())
ggplot(bl.gen1,aes(x=ploidy_diff,y=Fst))+geom_violin(data=bl.gen1,aes(fill=Data),trim=F)+geom_boxplot(data=bl.gen1,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Lineages")+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Fst")+theme_bw()+theme(axis.title.x=element_blank())
ggplot(bl.gen1,aes(x=ploidy_diff,y=dxy))+geom_violin(data=bl.gen1,aes(fill=Data),trim=F)+geom_boxplot(data=bl.gen1,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Lineages")+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Dxy")+theme_bw()+theme(axis.title.x=element_blank())

ggplot(bp.gen3,aes(x=ploidy_diff,y=Rho))+geom_violin(data=bp.gen3,aes(fill=Data),trim=F)+geom_boxplot(data=bp.gen3,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Populations")+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Rho")+theme_bw()+theme(axis.title.x=element_blank())
ggplot(bp.gen3,aes(x=ploidy_diff,y=Fst))+geom_violin(data=bp.gen3,aes(fill=Data),trim=F)+geom_boxplot(data=bp.gen3,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Populations")+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Fst")+theme_bw()+theme(axis.title.x=element_blank())
ggplot(bp.gen3,aes(x=ploidy_diff,y=dxy))+geom_violin(data=bp.gen3,aes(fill=Data),trim=F)+geom_boxplot(data=bp.gen3,aes(x=ploidy_diff,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Populations")+scale_x_discrete(labels=c("Within-Ploidy","Between-Ploidy"))+ylab("Dxy")+theme_bw()+theme(axis.title.x=element_blank())

bp.gen1=read.table("/Users/patrick/Documents/Research/300/bp.gen.txt",head=T)
bp.gen=merge(bp.gen,bp.gen1[,c("pop1","pop2","pop1.ploidy","pop2.ploidy")],by=c("pop1","pop2"))

bp.gen['ploidy_diff2']=(bp.gen$pop1.ploidy+bp.gen$pop2.ploidy)
bp.gen$ploidy_diff2=factor(bp.gen$ploidy_diff2,levels=c(4,8,6))

bl.gen['ploidy_diff2']=(bl.gen$pop1.ploidy+bl.gen$pop2.ploidy)
bl.gen$ploidy_diff2=factor(bl.gen$ploidy_diff2,levels=c(4,8,6))

ggplot(bp.gen,aes(x=ploidy_diff2,y=dxy))+geom_violin(data=bp.gen,aes(x=ploidy_diff2,y=dxy,fill=Data),trim=F)+geom_boxplot(data=bp.gen,aes(x=ploidy_diff2,y=dxy,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Populations")+scale_x_discrete(labels=c("Diploid","Tetraploid","Between-Ploidy"))+ylab("Dxy")+theme_bw()+theme(axis.title.x=element_blank())

ggplot(bp.gen,aes(x=ploidy_diff2,y=Rho))+geom_violin(data=bp.gen,aes(x=ploidy_diff2,y=Rho,fill=Data),trim=F)+geom_boxplot(data=bp.gen,aes(x=ploidy_diff2,y=Rho,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Populations")+scale_x_discrete(labels=c("Diploid","Tetraploid","Between-Ploidy"))+ylab("Rho")+theme_bw()+theme(axis.title.x=element_blank())

ggplot(bp.gen,aes(x=ploidy_diff2,y=Fst))+geom_violin(data=bp.gen,aes(x=ploidy_diff2,y=Fst,fill=Data),trim=F)+geom_boxplot(data=bp.gen,aes(x=ploidy_diff2,y=Fst,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Populations")+scale_x_discrete(labels=c("Diploid","Tetraploid","Between-Ploidy"))+ylab("Fst")+theme_bw()+theme(axis.title.x=element_blank())


ggplot(bl.gen,aes(x=ploidy_diff2,y=dxy))+geom_violin(data=bl.gen,aes(x=ploidy_diff2,y=dxy,fill=Data),trim=F)+geom_boxplot(data=bl.gen,aes(x=ploidy_diff2,y=dxy,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Lineages")+scale_x_discrete(labels=c("Diploid","Tetraploid","Between-Ploidy"))+ylab("Dxy")+theme_bw()+theme(axis.title.x=element_blank())

ggplot(bl.gen,aes(x=ploidy_diff2,y=Rho))+geom_violin(data=bl.gen,aes(x=ploidy_diff2,y=Rho,fill=Data),trim=F)+geom_boxplot(data=bl.gen,aes(x=ploidy_diff2,y=Rho,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Lineages")+scale_x_discrete(labels=c("Diploid","Tetraploid","Between-Ploidy"))+ylab("Rho")+theme_bw()+theme(axis.title.x=element_blank())

ggplot(bl.gen,aes(x=ploidy_diff2,y=Fst))+geom_violin(data=bl.gen,aes(x=ploidy_diff2,y=Fst,fill=Data),trim=F)+geom_boxplot(data=bl.gen,aes(x=ploidy_diff2,y=Fst,fill=Data),width=0.2,position=position_dodge(0.92))+ggtitle("Lineages")+scale_x_discrete(labels=c("Diploid","Tetraploid","Between-Ploidy"))+ylab("Fst")+theme_bw()+theme(axis.title.x=element_blank())


AFS plots:

All=read.table("/Users/patrick/Documents/AllPops_AFS_PASS.txt")
dg=read.table("/Users/patrick/Documents/AllPops_AFS_4dg.txt")
Ns=read.table("/Users/patrick/Documents/AllPops_AFS_NSyn.txt")
ALL=rbind(All,dg)
ALL=rbind(ALL,Ns)
ALL$V1=as.character(ALL$V1)
ALL['pop']=substr(ALL[,1],1,3)
ALL['data']=substr(ALL[,1],5,7)
ALL$pop=as.factor(ALL$pop)
ALL$data=as.factor(ALL$data)
ALL$data=factor(ALL$data,levels=c("PAS","4dg","NSy"))
jj=aggregate(V3~pop+data,data=ALL[ALL$V2>0,],sum)
colnames(jj)[3]="tot"
ALL1=merge(ALL,jj,by=c("pop","data"))

BEL=ggplot(ALL1[ALL1$pop=="BEL" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="BEL" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("BEL")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
BGS=ggplot(ALL1[ALL1$pop=="BGS" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="BGS" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("BGS")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
BIH=ggplot(ALL1[ALL1$pop=="BIH" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="BIH" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("BIH")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
BRD=ggplot(ALL1[ALL1$pop=="BRD" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="BRD" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("BRD")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
CHO=ggplot(ALL1[ALL1$pop=="CHO" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="CHO" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("CHO")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
DRA=ggplot(ALL1[ALL1$pop=="DRA" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="DRA" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("DRA")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
FOJ=ggplot(ALL1[ALL1$pop=="FOJ" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="FOJ" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("FOJ")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
GOR=ggplot(ALL1[ALL1$pop=="GOR" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="GOR" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("GOR")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
GUL=ggplot(ALL1[ALL1$pop=="GUL" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="GUL" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("GUL")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
HNE=ggplot(ALL1[ALL1$pop=="HNE" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="HNE" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("HNE")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
HOC=ggplot(ALL1[ALL1$pop=="HOC" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="HOC" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("HOC")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
KAS=ggplot(ALL1[ALL1$pop=="KAS" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="KAS" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("KAS")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
KOS=ggplot(ALL1[ALL1$pop=="KOS" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="KOS" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("KOS")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
KOW=ggplot(ALL1[ALL1$pop=="KOW" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="KOW" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("KOW")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
KZL=ggplot(ALL1[ALL1$pop=="KZL" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="KZL" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("KZL")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
LAC=ggplot(ALL1[ALL1$pop=="LAC" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="LAC" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("LAC")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
MIE=ggplot(ALL1[ALL1$pop=="MIE" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="MIE" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("MIE")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
PRE=ggplot(ALL1[ALL1$pop=="PRE" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="PRE" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("PRE")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
RFT=ggplot(ALL1[ALL1$pop=="RFT" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="RFT" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("RFT")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
RZA=ggplot(ALL1[ALL1$pop=="RZA" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="RZA" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("RZA")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
SCH=ggplot(ALL1[ALL1$pop=="SCH" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="SCH" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("SCH")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
SNO=ggplot(ALL1[ALL1$pop=="SNO" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="SNO" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("SNO")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
SPI=ggplot(ALL1[ALL1$pop=="SPI" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="SPI" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("SPI")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
STE=ggplot(ALL1[ALL1$pop=="STE" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="STE" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("STE")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
SWA=ggplot(ALL1[ALL1$pop=="SWA" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="SWA" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("SWA")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
SZI=ggplot(ALL1[ALL1$pop=="SZI" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="SZI" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("SZI")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
TBG=ggplot(ALL1[ALL1$pop=="TBG" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="TBG" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("TBG")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
TKO=ggplot(ALL1[ALL1$pop=="TKO" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="TKO" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("TKO")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
TRD=ggplot(ALL1[ALL1$pop=="TRD" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="TRD" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("TRD")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
TRE=ggplot(ALL1[ALL1$pop=="TRE" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="TRE" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("TRE")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
TRT=ggplot(ALL1[ALL1$pop=="TRT" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="TRT" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("TRT")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
TZI=ggplot(ALL1[ALL1$pop=="TZI" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="TZI" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("TZI")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
VEL=ggplot(ALL1[ALL1$pop=="VEL" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="VEL" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("VEL")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
VID=ggplot(ALL1[ALL1$pop=="VID" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="VID" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("VID")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
WEK=ggplot(ALL1[ALL1$pop=="WEK" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="WEK" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("WEK")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
ZAP=ggplot(ALL1[ALL1$pop=="ZAP" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="ZAP" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("ZAP")+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()
FOJ=ggplot(ALL1[ALL1$pop=="FOJ" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="FOJ" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle(paste("FOJ"))+scale_fill_manual(name="Data",values = c("blue", "seagreen3", "red"),labels=c("All","4dg","Nsyn"))+theme_bw()

pdf("/Users/patrick/Documents/Research/AFS1.pdf")
grid.arrange(BEL,BIH,FOJ,GOR,HNE,MIE,nrow=3,ncol=2)
dev.off()
pdf("/Users/patrick/Documents/Research/AFS2.pdf")
grid.arrange(PRE,RZA,TRD,VEL,VID,nrow=3,ncol=2)
dev.off()
pdf("/Users/patrick/Documents/Research/AFS3.pdf")
grid.arrange(BGS,BRD,CHO,DRA,GUL,HOC,nrow=3,ncol=2)
dev.off()
pdf("/Users/patrick/Documents/Research/AFS4.pdf")
grid.arrange(KAS,KOS,KOW,LAC,RFT,SCH,nrow=3,ncol=2)
dev.off()
pdf("/Users/patrick/Documents/Research/AFS5.pdf")
grid.arrange(SPI,STE,SWA,TBG,TKO,TRE,nrow=3,ncol=2)
dev.off()
pdf("/Users/patrick/Documents/Research/AFS6.pdf")
grid.arrange(TRT,TZI,ZAP,nrow=3,ncol=2)
dev.off()


pop_list=["BEL","BGS","BIH","BRD","CHO","DRA","FOJ","GOR","GUL","HNE","HOC","KAS","KOS","KOW","KZL","LAC","MIE","PRE","RFT","RZA","SCH","SNO","SPI","STE","SWA","SZI","TBG","TKO","TRD","TRE","TRT","TZI","VEL","VID","WEK","ZAP"]

for pop in pop_list:
    print(pop + '=ggplot(ALL1[ALL1$pop=="' + pop + '" & ALL1$V2>0,],aes(x=V2/max(V2),y=(V3/tot)/max(V3/tot)))+geom_bar(data=ALL1[ALL1$pop=="' + pop + '" & ALL1$V2>0,],aes(fill=data),position="dodge",stat="identity")+xlab("Allele Frequency")+ylab("Scaled Relative Frequency")+ggtitle("' + pop + '")')
